<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>bio.guoda</groupId>
        <artifactId>preston-parent</artifactId>
        <version>0.10.9-SNAPSHOT</version>
        <relativePath>../preston-parent/pom.xml</relativePath>
    </parent>

    <artifactId>preston</artifactId>
    <name>Preston</name>
    <description>a biodiversity dataset tracker</description>

    <properties>
        <asciidoctor-maven-plugin.version>2.2.2</asciidoctor-maven-plugin.version>
        <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>
        <asciidoctorj.version>2.5.3</asciidoctorj.version>
        <cmd.class>bio.guoda.preston.Preston</cmd.class>
        <generated.docs.dir>${project.build.outputDirectory}/bio/guoda/${project.artifactId}/docs</generated.docs.dir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-dwc</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-dbase</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-excel</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-zenodo</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-paradox</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-plazi</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-genbank</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-taxodros</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-mbd</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-github</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-taxonworks</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-serve</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-get</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-track</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-label</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.12</version>
        </dependency>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli-codegen</artifactId>
            <version>${picocli.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>preston-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.lingala.zip4j</groupId>
            <artifactId>zip4j</artifactId>
            <version>2.11.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>${cmd.class}</mainClass>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Project-Version>${project.version}</Project-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-uber-jar</id>
                        <!-- ensure that this doesn't run on travis -->
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>generate-manpages</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>${cmd.class}</argument>
                                <argument>gen-manpage</argument>
                                <argument>--outdir</argument>
                                <argument>${generated.docs.dir}/adoc</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-completion</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-Dpicocli.autocomplete.systemExitOnError</argument>
                                <argument>-cp</argument>
                                <classpath/>
                                <argument>picocli.AutoComplete</argument>
                                <argument>--force</argument><!-- overwrite if exists -->
                                <argument>--completionScript</argument>
                                <argument>${project.build.directory}/${project.artifactId}_completion</argument>
                                <argument>${cmd.class}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor-maven-plugin.version}</version>
                <configuration>
                    <sourceDirectory>${generated.docs.dir}/adoc</sourceDirectory>
                    <outputDirectory>${generated.docs.dir}/manpage</outputDirectory>
                    <attributes>
                        <sourcedir>${project.build.sourceDirectory}</sourcedir>
                    </attributes>
                </configuration>
                <executions>
                    <execution>
                        <id>asciidoc-to-manpage</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>manpage</backend>
                            <sourceDocumentName>${project.artifactId}.adoc</sourceDocumentName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <includeScope>compile</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>jdeb</artifactId>
                <groupId>org.vafer</groupId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                        <configuration>
                            <verbose>true</verbose>
                            <controlDir>${basedir}/src/main/deb/control</controlDir>
                            <dataSet>

                                <data>
                                    <src>${project.build.directory}/${project.build.finalName}.jar</src>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/${project.artifactId}/lib</prefix>
                                        <filemode>644</filemode>
                                        <user>${project.artifactId}</user>
                                        <group>${project.artifactId}</group>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${project.basedir}/src/main/deb/bin/${project.artifactId}</src>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/${project.artifactId}/bin</prefix>
                                        <filemode>755</filemode>
                                        <user>${project.artifactId}</user>
                                        <group>${project.artifactId}</group>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${project.build.directory}/${project.artifactId}_completion</src>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/bash_completion.d/</prefix>
                                        <filemode>755</filemode>
                                        <user>${project.artifactId}</user>
                                        <group>${project.artifactId}</group>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${project.build.directory}/lib</src>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/${project.artifactId}/lib</prefix>
                                        <filemode>644</filemode>
                                        <user>${project.artifactId}</user>
                                        <group>${project.artifactId}</group>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${generated.docs.dir}/manpage</src>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/local/share/man/man1/</prefix>
                                        <filemode>644</filemode>
                                        <user>${project.artifactId}</user>
                                        <group>${project.artifactId}</group>
                                    </mapper>
                                </data>

                                <data>
                                    <type>template</type>
                                    <paths>
                                        <path>etc/${project.artifactId}</path>
                                        <path>var/lib/${project.artifactId}</path>
                                        <path>var/log/${project.artifactId}</path>
                                        <path>var/run/${project.artifactId}</path>
                                    </paths>
                                    <mapper>
                                        <type>perm</type>
                                        <filemode>750</filemode>
                                        <user>${project.artifactId}</user>
                                        <group>${project.artifactId}</group>
                                    </mapper>
                                </data>
                                <data>
                                    <type>link</type>
                                    <symlink>true</symlink>
                                    <linkName>/usr/local/bin/${project.artifactId}</linkName>
                                    <linkTarget>/usr/share/${project.artifactId}/bin/${project.artifactId}</linkTarget>
                                </data>
                            </dataSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>0.9.13</version>
                <configuration>
                    <to>
                        <image>${project.groupId}/${project.artifactId}:${project.version}</image>
                    </to>
                    <container>
                        <args>
                            <arg>update</arg>
                        </args>
                    </container>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>buildTar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.3.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>rpm</goal>
                        </goals>
                        <configuration>
                            <license>MIT (c) 2018, Jorrit Poelen</license>
                            <distribution>Preston 2018/2025</distribution>
                            <group>Application/Collectors</group>
                            <packager>Jorrit Poelen</packager>
                            <prefix>/opt/${project.artifactId}</prefix>
                            <copyTo>${project.build.directory}/${project.artifactId}-${project.version}.rpm</copyTo>
                            <!--<changelogFile>changelog.md</changelogFile>-->
                            <defineStatements>
                                <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                            </defineStatements>
                            <requires>
                                <require>java-headless >= 1.8</require>
                                <require>bash-completion</require>
                            </requires>
                            <mappings>
                                <mapping>
                                    <directory>/opt/${project.artifactId}/lib</directory>
                                    <directoryIncluded>true</directoryIncluded>
                                    <filemode>755</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                </mapping>
                                <mapping>
                                    <directory>/opt/${project.artifactId}/lib</directory>
                                    <directoryIncluded>false</directoryIncluded>
                                    <filemode>644</filemode>
                                    <directoryIncluded>false</directoryIncluded>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <dependency/>
                                </mapping>
                                <mapping>
                                    <directory>/opt/${project.artifactId}/lib</directory>
                                    <directoryIncluded>false</directoryIncluded>
                                    <filemode>644</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <sources>
                                        <source>
                                            <location>target/${project.artifactId}-${project.version}.jar</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/usr/bin</directory>
                                    <directoryIncluded>false</directoryIncluded>
                                    <filemode>755</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <sources>
                                        <source>
                                            <location>src/main/rpm/${project.artifactId}</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/usr/share/bash-completion/completions</directory>
                                    <directoryIncluded>false</directoryIncluded>
                                    <filemode>644</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <sources>
                                        <source>
                                            <location>target/${project.artifactId}_completion</location>
                                            <destination>${project.artifactId}</destination>
                                        </source>
                                    </sources>
                                </mapping>
                            </mappings>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
